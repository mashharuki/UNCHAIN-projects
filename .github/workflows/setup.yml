name: setup

on: workflow_call

jobs:
  filename-check:
    runs-on: ubuntu-latest
    env:
      PATH_REGEX: ^.+\/docs\/.+\/.+\/(((ja|en)\/section\-[0-9]\/lesson\-[0-9]_.+)|index)\.md$
    steps:
      - uses: actions/checkout@v4
      - name: grep invalid filename
        run: |
          # This command finds all files in the docs directory and fails the workflow
          # if it finds any files that don't match the expected path pattern
          ! find ./docs/**/* -maxdepth 3 -type f | grep -Ev $PATH_REGEX

  metadata-check:
    runs-on: ubuntu-latest
    env:
      PATH_REGEX: ^.+\/docs\/.+\/.+\/(ja|en)\/section\-[0-9]\/lesson\-[0-9]_.+\.md$
    steps:
      - uses: actions/checkout@v4
      - name: check lesson count
        run: |
          for dir in docs/*/*/ja/
          do
            CONTENT="$(echo $dir | cut -d'/' -f3)"

            MDSECTIONCOUNT=$(jq -c '.total_sections' < public/metadata/$CONTENT/description.json)
            FSSECTIONCOUNT=$(find $dir -type d -iname "section-*" | wc -l)
            if (( $MDSECTIONCOUNT != $FSSECTIONCOUNT ))
            then
              echo "Update section count to $FSSECTIONCOUNT in public/metadata/$CONTENT/description.json (currently $MDSECTIONCOUNT)"
              exit 1
            fi

            MDLESSONCOUNT=$(jq -c '.total_lessons' < public/metadata/$CONTENT/description.json)
            FSLESSONCOUNT=$(find $dir -type f ! -iname '.*' | wc -l)
            if (( $MDLESSONCOUNT != $FSLESSONCOUNT ))
            then
              echo "Update lesson count to $FSLESSONCOUNT in public/metadata/$CONTENT/description.json (currently $MDLESSONCOUNT)"
              exit 1
            fi

            echo "$CONTENT: $FSSECTIONCOUNT sections / $FSLESSONCOUNT lessons"
          done  

  textlint:
    runs-on: ubuntu-latest
    needs: [filename-check, metadata-check]
    env:
      LEVEL: error
      FLAGS: docs/**/*.md
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Restore dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: yarn install --immutable
      - name: Setup reviewdog
        uses: reviewdog/action-setup@v1
        with:
          reviewdog_version: latest
      - name: Check and Review
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          yarn textlint:check -f checkstyle "${FLAGS:-'.'}" | reviewdog -f=checkstyle -name=check -reporter=github-pr-review -reporter=github-pr-check -level="${LEVEL}"
